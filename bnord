#!/usr/bin/env bash
################################################################################
# bnord - Open a VPN connection to a NordVPN server.
# Copyright (C) 2021  Bo Cimino
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
################################################################################

VERSION="1.0.0"

# Print server hostnames based on filters.
function list_recommended
{
    local type_="$1"
    local filters=()

    if [[ "$type_" =~ "p2p" ]]
    then
        filters+=('"servers_groups":15')
    fi

    if [ ! -z "${filters[@]}" ]
    then
        filters=$(printf ",%s" "${filters[@]}")
        filters=${filters:1}
        filters="?filters={${filters}}"
    fi

    url="https://api.nordvpn.com/v1/servers/recommendations${filters}"
    curl --silent "$url" | jq --raw-output 'limit(10;.[]) | .hostname'
}

function usage
{
echo "\
usage: $0 [option]... operation

This program must be run as root. ctrl-c to stop a connection.

Operation can be one of the following

  update                Download new nordvpn server config archive.

  connect [server]      Connect to the recommended server. Alternatively
                        connect via the short name (ie. us3914).

Connection Options:

  --p2p                 Connect to a server that supports P2P.

  -t, --tcp             Use the tcp protocol.

  -u, --udp             Use the udp protocol. This is the default.

  -h, --help            Print this help message.
"
}

# Defaults
PROTOCOL="udp"

# gnu getopt
ARGS=$(getopt -o tuh -l p2p,tcp,udp,version,help -- "$@")
if [ "$?" != "0" ]
then
    exit 1
fi

eval set -- "$ARGS"

# parse args
filters=""
while true ; do
    case "$1" in
        --p2p)
            filters="$filters p2p"
            shift
            ;;
        -t|--tcp)
            PROTOCOL="tcp"
            shift
            ;;
        -u|--udp)
            PROTOCOL="udp"
            shift
            ;;
        --version)
            echo "$VERSION"
            exit 0
            ;;
        -h|--help)
            usage
            exit 0
            ;;
        --)
            shift
            break
            ;;
        *)
            usage
            exit 1
            ;;
    esac
done

# args now only has positional args
operation="$1"

if [ -z "$operation" ]
then
    usage
    exit 1
fi

if [[ $EUID -ne 0 ]]
then
    echo "ERROR: Operations must be run as root." >&2
    exit 1
fi

if [ "$operation" == "update" ]
then
    mkdir -p /etc/bnord
    cd /etc/bnord

    wget https://downloads.nordcdn.com/configs/archives/servers/ovpn.zip
    if [ "$?" != "0" ]
    then
        echo "ERROR: Updating configs." >&2
        exit 1
    fi

    rm -rf ovpn_tcp ovpn_udp
    unzip ovpn.zip
    rm ovpn.zip

elif [ "$operation" == "connect" ]
then
    server="$2"
    if [ -z "$server" ]
    then
        server="$(list_recommended $filters | head -n 1)"
    fi

    conf="$(find /etc/bnord/ovpn_${PROTOCOL} -name "${server}.*")"

    if [ ! -f "$conf" ]
    then
        echo "ERROR: Configuration $conf not found." >&2
        exit 1
    fi

    openvpn "$conf"

else
    usage
    exit 1
fi
